[{"C:\\Users\\wlgns\\begin-react\\src\\App.js":"1","C:\\Users\\wlgns\\begin-react\\src\\index.js":"2","C:\\Users\\wlgns\\begin-react\\src\\Hello.js":"3","C:\\Users\\wlgns\\begin-react\\src\\Counter.js":"4","C:\\Users\\wlgns\\begin-react\\src\\InputSample.js":"5","C:\\Users\\wlgns\\begin-react\\src\\Wrapper.js":"6","C:\\Users\\wlgns\\begin-react\\src\\reportWebVitals.js":"7","C:\\Users\\wlgns\\begin-react\\src\\UserList.js":"8","C:\\Users\\wlgns\\begin-react\\src\\CreateUser.js":"9","C:\\Users\\wlgns\\begin-react\\src\\UserList1.js":"10","C:\\Users\\wlgns\\begin-react\\src\\CreateUser1.js":"11"},{"size":5112,"mtime":1611670444620,"results":"12","hashOfConfig":"13"},{"size":547,"mtime":1611677098983,"results":"14","hashOfConfig":"13"},{"size":634,"mtime":1606663747872,"results":"15","hashOfConfig":"13"},{"size":1944,"mtime":1611676808202,"results":"16","hashOfConfig":"13"},{"size":2241,"mtime":1611497497106,"results":"17","hashOfConfig":"13"},{"size":399,"mtime":1606663144828,"results":"18","hashOfConfig":"13"},{"size":362,"mtime":1606575632763,"results":"19","hashOfConfig":"13"},{"size":2926,"mtime":1611675788377,"results":"20","hashOfConfig":"13"},{"size":496,"mtime":1611670847720,"results":"21","hashOfConfig":"13"},{"size":869,"mtime":1611510313303,"results":"22","hashOfConfig":"13"},{"size":482,"mtime":1611510274033,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lcsgb6",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wlgns\\begin-react\\src\\App.js",[],"C:\\Users\\wlgns\\begin-react\\src\\index.js",["47"],"C:\\Users\\wlgns\\begin-react\\src\\Hello.js",[],"C:\\Users\\wlgns\\begin-react\\src\\Counter.js",[],"C:\\Users\\wlgns\\begin-react\\src\\InputSample.js",[],"C:\\Users\\wlgns\\begin-react\\src\\Wrapper.js",[],"C:\\Users\\wlgns\\begin-react\\src\\reportWebVitals.js",[],"C:\\Users\\wlgns\\begin-react\\src\\UserList.js",["48"],"import React,{useEffect} from 'react';\r\n\r\nconst User=React.memo(function User({user,onRemove,onToggle}){\r\n    const {username,email,id,active}=user;//username, email, id를 user로 추출해준다.\r\n\r\n\r\n   //배열을 사용하게되면\r\n//    useEffect(()=>{\r\n//     console.log('user값이 설정됨');   \r\n//     console.log(user);\r\n//     return ()=>{\r\n//         console.log('user 값이 바뀌기전');\r\n//         console.log(user);\r\n//     }\r\n//    },[user]);//useEffect함수는 user가 호출될때마다 실행되고 useEffect함수는  특정값이 업데이트된후에 실행이된다.\r\n\r\n    // useEffect(()=>{\r\n    //     console.log('컴포넌트가 화면에 나타남');//deps dependency약자[]\r\n    //     //props -> state\r\n    //     //REST API\r\n    //     //D3 video.js\r\n    //     //setinterval, setTimeout등 useEffect를 사용할수있다.\r\n    //     return ()=> {\r\n    //         console.log('컴포넌트가 화면에서 사라짐');\r\n    //     }\r\n    // },[]);\r\n    return(\r\n        <div>\r\n            <b style={{\r\n                color:active ? 'green':'black',\r\n                cursor:'pointer'\r\n                 }}\r\n                 onClick={()=>onToggle(id)}>\r\n                     {username}\r\n                 </b>\r\n      <span>({email})</span>\r\n        {/* ()=> 함수가 없이 랜더링하게 되면 전체 id를랜더링하기때문에 function을 해줘야특정아이디만 불러온다 */}\r\n        <button onClick={()=>onRemove(id)}>삭제</button>\r\n    </div>\r\n    )\r\n});\r\n\r\nfunction UserList({users,onRemove,onToggle}){//props로 users를 App.js에서 받아온다.\r\n    // const users=[\r\n        \r\n    //         { id: 1,\r\n    //             username: 'velopert',\r\n    //                 email:'public@naver.com'\r\n    //         } ,\r\n    //         {\r\n    //             id:2,\r\n    //             username: 'leejihun',\r\n    //             email:'liz@naver.com'\r\n            \r\n    //         },\r\n    //         {\r\n    //             id:3,\r\n    //             username: 'its',\r\n    //             email: 'its@naver.com'            \r\n    //         }\r\n    // ];\r\n    return (\r\n        // <div>\r\n        //     <div>\r\n        //         <b>{user[0],username}</b><span>({user[0].email})</span>\r\n        //     </div>\r\n        //     <div>\r\n        //         <b>{user[1],username}</b><span>({user[1].email})</span>\r\n        //     </div>\r\n        //     <div>\r\n        //         <b>{user[2],username}</b><span>({user[2].email})</span>\r\n        //     </div>\r\n        // </div>\r\n        <div>\r\n            {\r\n                users.map(\r\n                   (user, index) => (<User user={user} key={user.id}\r\n                   onRemove={onRemove}\r\n                   onToggle={onToggle}/>)\r\n                    )\r\n                    \r\n          }\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(UserList,\r\n    (prevProps,nextProps) => \r\n    nextProps.users === prevProps.users);","C:\\Users\\wlgns\\begin-react\\src\\CreateUser.js",[],"C:\\Users\\wlgns\\begin-react\\src\\UserList1.js",[],"C:\\Users\\wlgns\\begin-react\\src\\CreateUser1.js",[],{"ruleId":"49","severity":1,"message":"50","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":11},{"ruleId":"49","severity":1,"message":"53","line":1,"column":15,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used."]